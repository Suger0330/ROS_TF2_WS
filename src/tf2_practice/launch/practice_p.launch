<launch>
<!--
    流程详解:
        1.准备工作:启动乌龟的GUI节点与键盘控制节点;
        2.需要调用服务生成一只新的乌龟;
        3.发布两只乌龟的坐标信息;
        4.订阅坐标信息,并且转换成乌龟A相对于乌龟B的坐标信息,最后再生励控制乌龟B的速度信息.
-->
    <!-- 1.准备工作:启动乌龟的GUI节点与键盘控制节点 -->
    <node pkg="turtlesim" type="turtlesim_node" name="turtle1" output="screen" />
    <node pkg="turtlesim" type="turtle_teleop_key" name="key" output="screen" />

    <!-- 2.需要调用服务生成一只新的乌龟 -->
    <node pkg="tf2_practice" type="turtle2_p.py" name="turtle2_p" output="screen" />


    <!-- 3.发布两只乌龟的坐标信息
            1.复用之前的乌龟坐标发布功能;
            2.调用节点时,以参数的方式传递乌龟名称,解析参数置换:订阅的话题消息和子级坐标系的名称.
    -->
    <node pkg="tf2_practice" type="pub_turtle_p.py" name="pub1_p" args="turtle1" output="screen" />
    <node pkg="tf2_practice" type="pub_turtle_p.py" name="pub2_p" args="turtle2_p" output="screen" />

    <!-- 4.订阅坐标信息,并且转换成乌龟A相对于乌龟B的坐标信息,最后再生励控制乌龟B的速度信息 -->
    <node pkg="tf2_practice" type="control_turtle2_p.py" name="control_p" output="screen" />

</launch>